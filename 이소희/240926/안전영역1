'''
656ms
'''
N = int(input())
road = [list(map(int, input().split())) for _ in range(N)]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def dfs(x, y, h, visited):
    stack = [(x, y)]
    visited[x][y] = True

    while stack:
        cx, cy = stack.pop()
        for i in range(4):
            nx, ny = cx + dx[i], cy + dy[i]
            if 0 <= nx < N and 0 <= ny < N and not visited[nx][ny] and road[nx][ny] > h:
                visited[nx][ny] = True
                stack.append((nx, ny))

maxSafeZone = 0
maxHeight = max(map(max, road))

for h in range(maxHeight + 1): 
    visited = [[False] * N for _ in range(N)]
    safe_zones = 0
    for i in range(N):
        for j in range(N):
            if road[i][j] > h and not visited[i][j]:
                dfs(i, j, h, visited)
                safe_zones += 1
    maxSafeZone = max(maxSafeZone, safe_zones)

print(maxSafeZone)
